{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO4URWPc426zQtlaJarUvoj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DeepthiSundhara/Fraud-detection-using-logistic-regression/blob/main/Untitled4.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YfQaAssw7ukS"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "MrmIWtpC7wXv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "UpOMRE6Q7x8R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df= pd.read_csv(\"/content/insurance_claims (1).csv\",error_bad_lines=False)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "A2N2srNq7556",
        "outputId": "9604293e-38f8-42af-a8fc-60d858db3453"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-39-1b49ee647c35>:1: FutureWarning: The error_bad_lines argument has been deprecated and will be removed in a future version. Use on_bad_lines in the future.\n",
            "\n",
            "\n",
            "  df= pd.read_csv(\"/content/insurance_claims (1).csv\",error_bad_lines=False)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   months_as_customer  age  policy_number policy_bind_date policy_state  \\\n",
              "0                 328   48         521585       17-10-2014           OH   \n",
              "1                 228   42         342868       27-06-2006           IN   \n",
              "2                 134   29         687698       06-09-2000           OH   \n",
              "3                 256   41         227811       25-05-1990           IL   \n",
              "4                 228   44         367455       06-06-2014           IL   \n",
              "\n",
              "  policy_csl  policy_deductable  policy_annual_premium  umbrella_limit  \\\n",
              "0    250/500               1000                1406.91               0   \n",
              "1    250/500               2000                1197.22         5000000   \n",
              "2    100/300               2000                1413.14         5000000   \n",
              "3    250/500               2000                1415.74         6000000   \n",
              "4   500/1000               1000                1583.91         6000000   \n",
              "\n",
              "   insured_zip insured_sex insured_education_level insured_occupation  \\\n",
              "0       466132        MALE                      MD       craft-repair   \n",
              "1       468176        MALE                      MD  machine-op-inspct   \n",
              "2       430632      FEMALE                     PhD              sales   \n",
              "3       608117      FEMALE                     PhD       armed-forces   \n",
              "4       610706        MALE               Associate              sales   \n",
              "\n",
              "  insured_hobbies insured_relationship  capital-gains  capital-loss  \\\n",
              "0        sleeping              husband          53300             0   \n",
              "1         reading       other-relative              0             0   \n",
              "2     board-games            own-child          35100             0   \n",
              "3     board-games            unmarried          48900        -62400   \n",
              "4     board-games            unmarried          66000        -46000   \n",
              "\n",
              "  incident_date             incident_type   collision_type incident_severity  \\\n",
              "0    25-01-2015  Single Vehicle Collision   Side Collision      Major Damage   \n",
              "1    21-01-2015             Vehicle Theft                ?      Minor Damage   \n",
              "2    22-02-2015   Multi-vehicle Collision   Rear Collision      Minor Damage   \n",
              "3    10-01-2015  Single Vehicle Collision  Front Collision      Major Damage   \n",
              "4    17-02-2015             Vehicle Theft                ?      Minor Damage   \n",
              "\n",
              "  authorities_contacted incident_state incident_city  incident_location  \\\n",
              "0                Police             SC      Columbus     9935 4th Drive   \n",
              "1                Police             VA     Riverwood       6608 MLK Hwy   \n",
              "2                Police             NY      Columbus  7121 Francis Lane   \n",
              "3                Police             OH     Arlington   6956 Maple Drive   \n",
              "4                  None             NY     Arlington       3041 3rd Ave   \n",
              "\n",
              "   incident_hour_of_the_day  number_of_vehicles_involved property_damage  \\\n",
              "0                         5                            1             YES   \n",
              "1                         8                            1               ?   \n",
              "2                         7                            3              NO   \n",
              "3                         5                            1               ?   \n",
              "4                        20                            1              NO   \n",
              "\n",
              "   bodily_injuries  witnesses police_report_available  total_claim_amount  \\\n",
              "0                1          2                     YES               71610   \n",
              "1                0          0                       ?                5070   \n",
              "2                2          3                      NO               34650   \n",
              "3                1          2                      NO               63400   \n",
              "4                0          1                      NO                6500   \n",
              "\n",
              "   injury_claim  property_claim  vehicle_claim  auto_make auto_model  \\\n",
              "0          6510           13020          52080       Saab        92x   \n",
              "1           780             780           3510   Mercedes       E400   \n",
              "2          7700            3850          23100      Dodge        RAM   \n",
              "3          6340            6340          50720  Chevrolet      Tahoe   \n",
              "4          1300             650           4550     Accura        RSX   \n",
              "\n",
              "   auto_year fraud_reported  _c39  \n",
              "0       2004              Y   NaN  \n",
              "1       2007              Y   NaN  \n",
              "2       2007              N   NaN  \n",
              "3       2014              Y   NaN  \n",
              "4       2009              N   NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b55ec1d-981e-4238-b60f-f09e6130aa51\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>months_as_customer</th>\n",
              "      <th>age</th>\n",
              "      <th>policy_number</th>\n",
              "      <th>policy_bind_date</th>\n",
              "      <th>policy_state</th>\n",
              "      <th>policy_csl</th>\n",
              "      <th>policy_deductable</th>\n",
              "      <th>policy_annual_premium</th>\n",
              "      <th>umbrella_limit</th>\n",
              "      <th>insured_zip</th>\n",
              "      <th>insured_sex</th>\n",
              "      <th>insured_education_level</th>\n",
              "      <th>insured_occupation</th>\n",
              "      <th>insured_hobbies</th>\n",
              "      <th>insured_relationship</th>\n",
              "      <th>capital-gains</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>incident_date</th>\n",
              "      <th>incident_type</th>\n",
              "      <th>collision_type</th>\n",
              "      <th>incident_severity</th>\n",
              "      <th>authorities_contacted</th>\n",
              "      <th>incident_state</th>\n",
              "      <th>incident_city</th>\n",
              "      <th>incident_location</th>\n",
              "      <th>incident_hour_of_the_day</th>\n",
              "      <th>number_of_vehicles_involved</th>\n",
              "      <th>property_damage</th>\n",
              "      <th>bodily_injuries</th>\n",
              "      <th>witnesses</th>\n",
              "      <th>police_report_available</th>\n",
              "      <th>total_claim_amount</th>\n",
              "      <th>injury_claim</th>\n",
              "      <th>property_claim</th>\n",
              "      <th>vehicle_claim</th>\n",
              "      <th>auto_make</th>\n",
              "      <th>auto_model</th>\n",
              "      <th>auto_year</th>\n",
              "      <th>fraud_reported</th>\n",
              "      <th>_c39</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>328</td>\n",
              "      <td>48</td>\n",
              "      <td>521585</td>\n",
              "      <td>17-10-2014</td>\n",
              "      <td>OH</td>\n",
              "      <td>250/500</td>\n",
              "      <td>1000</td>\n",
              "      <td>1406.91</td>\n",
              "      <td>0</td>\n",
              "      <td>466132</td>\n",
              "      <td>MALE</td>\n",
              "      <td>MD</td>\n",
              "      <td>craft-repair</td>\n",
              "      <td>sleeping</td>\n",
              "      <td>husband</td>\n",
              "      <td>53300</td>\n",
              "      <td>0</td>\n",
              "      <td>25-01-2015</td>\n",
              "      <td>Single Vehicle Collision</td>\n",
              "      <td>Side Collision</td>\n",
              "      <td>Major Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>SC</td>\n",
              "      <td>Columbus</td>\n",
              "      <td>9935 4th Drive</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>YES</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>YES</td>\n",
              "      <td>71610</td>\n",
              "      <td>6510</td>\n",
              "      <td>13020</td>\n",
              "      <td>52080</td>\n",
              "      <td>Saab</td>\n",
              "      <td>92x</td>\n",
              "      <td>2004</td>\n",
              "      <td>Y</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>228</td>\n",
              "      <td>42</td>\n",
              "      <td>342868</td>\n",
              "      <td>27-06-2006</td>\n",
              "      <td>IN</td>\n",
              "      <td>250/500</td>\n",
              "      <td>2000</td>\n",
              "      <td>1197.22</td>\n",
              "      <td>5000000</td>\n",
              "      <td>468176</td>\n",
              "      <td>MALE</td>\n",
              "      <td>MD</td>\n",
              "      <td>machine-op-inspct</td>\n",
              "      <td>reading</td>\n",
              "      <td>other-relative</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>21-01-2015</td>\n",
              "      <td>Vehicle Theft</td>\n",
              "      <td>?</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>VA</td>\n",
              "      <td>Riverwood</td>\n",
              "      <td>6608 MLK Hwy</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>?</td>\n",
              "      <td>5070</td>\n",
              "      <td>780</td>\n",
              "      <td>780</td>\n",
              "      <td>3510</td>\n",
              "      <td>Mercedes</td>\n",
              "      <td>E400</td>\n",
              "      <td>2007</td>\n",
              "      <td>Y</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>134</td>\n",
              "      <td>29</td>\n",
              "      <td>687698</td>\n",
              "      <td>06-09-2000</td>\n",
              "      <td>OH</td>\n",
              "      <td>100/300</td>\n",
              "      <td>2000</td>\n",
              "      <td>1413.14</td>\n",
              "      <td>5000000</td>\n",
              "      <td>430632</td>\n",
              "      <td>FEMALE</td>\n",
              "      <td>PhD</td>\n",
              "      <td>sales</td>\n",
              "      <td>board-games</td>\n",
              "      <td>own-child</td>\n",
              "      <td>35100</td>\n",
              "      <td>0</td>\n",
              "      <td>22-02-2015</td>\n",
              "      <td>Multi-vehicle Collision</td>\n",
              "      <td>Rear Collision</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>NY</td>\n",
              "      <td>Columbus</td>\n",
              "      <td>7121 Francis Lane</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>NO</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>NO</td>\n",
              "      <td>34650</td>\n",
              "      <td>7700</td>\n",
              "      <td>3850</td>\n",
              "      <td>23100</td>\n",
              "      <td>Dodge</td>\n",
              "      <td>RAM</td>\n",
              "      <td>2007</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>256</td>\n",
              "      <td>41</td>\n",
              "      <td>227811</td>\n",
              "      <td>25-05-1990</td>\n",
              "      <td>IL</td>\n",
              "      <td>250/500</td>\n",
              "      <td>2000</td>\n",
              "      <td>1415.74</td>\n",
              "      <td>6000000</td>\n",
              "      <td>608117</td>\n",
              "      <td>FEMALE</td>\n",
              "      <td>PhD</td>\n",
              "      <td>armed-forces</td>\n",
              "      <td>board-games</td>\n",
              "      <td>unmarried</td>\n",
              "      <td>48900</td>\n",
              "      <td>-62400</td>\n",
              "      <td>10-01-2015</td>\n",
              "      <td>Single Vehicle Collision</td>\n",
              "      <td>Front Collision</td>\n",
              "      <td>Major Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>OH</td>\n",
              "      <td>Arlington</td>\n",
              "      <td>6956 Maple Drive</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>NO</td>\n",
              "      <td>63400</td>\n",
              "      <td>6340</td>\n",
              "      <td>6340</td>\n",
              "      <td>50720</td>\n",
              "      <td>Chevrolet</td>\n",
              "      <td>Tahoe</td>\n",
              "      <td>2014</td>\n",
              "      <td>Y</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>228</td>\n",
              "      <td>44</td>\n",
              "      <td>367455</td>\n",
              "      <td>06-06-2014</td>\n",
              "      <td>IL</td>\n",
              "      <td>500/1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1583.91</td>\n",
              "      <td>6000000</td>\n",
              "      <td>610706</td>\n",
              "      <td>MALE</td>\n",
              "      <td>Associate</td>\n",
              "      <td>sales</td>\n",
              "      <td>board-games</td>\n",
              "      <td>unmarried</td>\n",
              "      <td>66000</td>\n",
              "      <td>-46000</td>\n",
              "      <td>17-02-2015</td>\n",
              "      <td>Vehicle Theft</td>\n",
              "      <td>?</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>None</td>\n",
              "      <td>NY</td>\n",
              "      <td>Arlington</td>\n",
              "      <td>3041 3rd Ave</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>NO</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NO</td>\n",
              "      <td>6500</td>\n",
              "      <td>1300</td>\n",
              "      <td>650</td>\n",
              "      <td>4550</td>\n",
              "      <td>Accura</td>\n",
              "      <td>RSX</td>\n",
              "      <td>2009</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b55ec1d-981e-4238-b60f-f09e6130aa51')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5b55ec1d-981e-4238-b60f-f09e6130aa51 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5b55ec1d-981e-4238-b60f-f09e6130aa51');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**SELECTING SPECIFIC COLUMNS FOR DATA DESCRIPTION**"
      ],
      "metadata": {
        "id": "DhdT4x22_y_3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "selected_columns = ['policy_csl', 'policy_deductable', 'policy_annual_premium','umbrella_limit','capital-gains','capital-loss','incident_hour_of_the_day','number_of_vehicles_involved','bodily_injuries','witnesses','total_claim_amount','injury_claim','property_claim','vehicle_claim'] \n",
        "df1 = df[selected_columns]"
      ],
      "metadata": {
        "id": "uT5rIwYf8Ipo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df1.describe(percentiles=[.01,.05,.2,.5,.75,.8,.9,.99])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 538
        },
        "id": "swbpYYHT-UDj",
        "outputId": "6bb283cd-3398-4b98-9918-b7488c480f0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       policy_deductable  policy_annual_premium  umbrella_limit  \\\n",
              "count        1000.000000            1000.000000    1.000000e+03   \n",
              "mean         1136.000000            1256.406150    1.101000e+06   \n",
              "std           611.864673             244.167395    2.297407e+06   \n",
              "min           500.000000             433.330000   -1.000000e+06   \n",
              "1%            500.000000             694.224700    0.000000e+00   \n",
              "5%            500.000000             855.112000    0.000000e+00   \n",
              "20%           500.000000            1050.656000    0.000000e+00   \n",
              "50%          1000.000000            1257.200000    0.000000e+00   \n",
              "75%          2000.000000            1415.695000    0.000000e+00   \n",
              "80%          2000.000000            1454.674000    2.000000e+06   \n",
              "90%          2000.000000            1564.724000    6.000000e+06   \n",
              "99%          2000.000000            1851.876500    8.000000e+06   \n",
              "max          2000.000000            2047.590000    1.000000e+07   \n",
              "\n",
              "       capital-gains   capital-loss  incident_hour_of_the_day  \\\n",
              "count    1000.000000    1000.000000               1000.000000   \n",
              "mean    25126.100000  -26793.700000                 11.644000   \n",
              "std     27872.187708   28104.096686                  6.951373   \n",
              "min         0.000000 -111100.000000                  0.000000   \n",
              "1%          0.000000  -85914.000000                  0.000000   \n",
              "5%          0.000000  -72305.000000                  0.000000   \n",
              "20%         0.000000  -55420.000000                  4.000000   \n",
              "50%         0.000000  -23250.000000                 12.000000   \n",
              "75%     51025.000000       0.000000                 17.000000   \n",
              "80%     54100.000000       0.000000                 19.000000   \n",
              "90%     64420.000000       0.000000                 21.000000   \n",
              "99%     83603.000000       0.000000                 23.000000   \n",
              "max    100500.000000       0.000000                 23.000000   \n",
              "\n",
              "       number_of_vehicles_involved  bodily_injuries    witnesses  \\\n",
              "count                   1000.00000      1000.000000  1000.000000   \n",
              "mean                       1.83900         0.992000     1.487000   \n",
              "std                        1.01888         0.820127     1.111335   \n",
              "min                        1.00000         0.000000     0.000000   \n",
              "1%                         1.00000         0.000000     0.000000   \n",
              "5%                         1.00000         0.000000     0.000000   \n",
              "20%                        1.00000         0.000000     0.000000   \n",
              "50%                        1.00000         1.000000     1.000000   \n",
              "75%                        3.00000         2.000000     2.000000   \n",
              "80%                        3.00000         2.000000     3.000000   \n",
              "90%                        3.00000         2.000000     3.000000   \n",
              "99%                        4.00000         2.000000     3.000000   \n",
              "max                        4.00000         2.000000     3.000000   \n",
              "\n",
              "       total_claim_amount  injury_claim  property_claim  vehicle_claim  \n",
              "count          1000.00000   1000.000000     1000.000000    1000.000000  \n",
              "mean          52761.94000   7433.420000     7399.570000   37928.950000  \n",
              "std           26401.53319   4880.951853     4824.726179   18886.252893  \n",
              "min             100.00000      0.000000        0.000000      70.000000  \n",
              "1%             2699.40000      0.000000        0.000000    1979.800000  \n",
              "5%             4320.00000    450.000000      450.000000    3273.500000  \n",
              "20%           33344.00000   2138.000000     3158.000000   24392.000000  \n",
              "50%           58055.00000   6775.000000     6750.000000   42100.000000  \n",
              "75%           70592.50000  11305.000000    10885.000000   50822.500000  \n",
              "80%           74360.00000  12300.000000    11708.000000   52960.000000  \n",
              "90%           81364.00000  14380.000000    14142.000000   58728.000000  \n",
              "99%          101018.50000  17682.000000    19471.800000   73263.600000  \n",
              "max          114920.00000  21450.000000    23670.000000   79560.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8751cbae-0280-48f2-9b48-18d0f9c4a0a3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>policy_deductable</th>\n",
              "      <th>policy_annual_premium</th>\n",
              "      <th>umbrella_limit</th>\n",
              "      <th>capital-gains</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>incident_hour_of_the_day</th>\n",
              "      <th>number_of_vehicles_involved</th>\n",
              "      <th>bodily_injuries</th>\n",
              "      <th>witnesses</th>\n",
              "      <th>total_claim_amount</th>\n",
              "      <th>injury_claim</th>\n",
              "      <th>property_claim</th>\n",
              "      <th>vehicle_claim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1.000000e+03</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.00000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.00000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1136.000000</td>\n",
              "      <td>1256.406150</td>\n",
              "      <td>1.101000e+06</td>\n",
              "      <td>25126.100000</td>\n",
              "      <td>-26793.700000</td>\n",
              "      <td>11.644000</td>\n",
              "      <td>1.83900</td>\n",
              "      <td>0.992000</td>\n",
              "      <td>1.487000</td>\n",
              "      <td>52761.94000</td>\n",
              "      <td>7433.420000</td>\n",
              "      <td>7399.570000</td>\n",
              "      <td>37928.950000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>611.864673</td>\n",
              "      <td>244.167395</td>\n",
              "      <td>2.297407e+06</td>\n",
              "      <td>27872.187708</td>\n",
              "      <td>28104.096686</td>\n",
              "      <td>6.951373</td>\n",
              "      <td>1.01888</td>\n",
              "      <td>0.820127</td>\n",
              "      <td>1.111335</td>\n",
              "      <td>26401.53319</td>\n",
              "      <td>4880.951853</td>\n",
              "      <td>4824.726179</td>\n",
              "      <td>18886.252893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>433.330000</td>\n",
              "      <td>-1.000000e+06</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-111100.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>100.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>70.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1%</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>694.224700</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-85914.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2699.40000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1979.800000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5%</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>855.112000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-72305.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4320.00000</td>\n",
              "      <td>450.000000</td>\n",
              "      <td>450.000000</td>\n",
              "      <td>3273.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20%</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>1050.656000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-55420.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>33344.00000</td>\n",
              "      <td>2138.000000</td>\n",
              "      <td>3158.000000</td>\n",
              "      <td>24392.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1000.000000</td>\n",
              "      <td>1257.200000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-23250.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>58055.00000</td>\n",
              "      <td>6775.000000</td>\n",
              "      <td>6750.000000</td>\n",
              "      <td>42100.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2000.000000</td>\n",
              "      <td>1415.695000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>51025.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>70592.50000</td>\n",
              "      <td>11305.000000</td>\n",
              "      <td>10885.000000</td>\n",
              "      <td>50822.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80%</th>\n",
              "      <td>2000.000000</td>\n",
              "      <td>1454.674000</td>\n",
              "      <td>2.000000e+06</td>\n",
              "      <td>54100.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>74360.00000</td>\n",
              "      <td>12300.000000</td>\n",
              "      <td>11708.000000</td>\n",
              "      <td>52960.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90%</th>\n",
              "      <td>2000.000000</td>\n",
              "      <td>1564.724000</td>\n",
              "      <td>6.000000e+06</td>\n",
              "      <td>64420.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>81364.00000</td>\n",
              "      <td>14380.000000</td>\n",
              "      <td>14142.000000</td>\n",
              "      <td>58728.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99%</th>\n",
              "      <td>2000.000000</td>\n",
              "      <td>1851.876500</td>\n",
              "      <td>8.000000e+06</td>\n",
              "      <td>83603.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>101018.50000</td>\n",
              "      <td>17682.000000</td>\n",
              "      <td>19471.800000</td>\n",
              "      <td>73263.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2000.000000</td>\n",
              "      <td>2047.590000</td>\n",
              "      <td>1.000000e+07</td>\n",
              "      <td>100500.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>114920.00000</td>\n",
              "      <td>21450.000000</td>\n",
              "      <td>23670.000000</td>\n",
              "      <td>79560.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8751cbae-0280-48f2-9b48-18d0f9c4a0a3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8751cbae-0280-48f2-9b48-18d0f9c4a0a3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8751cbae-0280-48f2-9b48-18d0f9c4a0a3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n"
      ],
      "metadata": {
        "id": "xwmkasY6-xyG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**CREATINNG A REPORT WHICH INCLUDES; COLUMNS,DATA TYPE AND UNIQUE VALUES**"
      ],
      "metadata": {
        "id": "UuMoCT3dASd4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def report(df):\n",
        "    col = []\n",
        "    d_type = []\n",
        "    uniques = []\n",
        "    n_uniques = []\n",
        "    \n",
        "    for i in df.columns:\n",
        "        col.append(i)\n",
        "        d_type.append(df[i].dtypes)\n",
        "        uniques.append(df[i].unique()[:5])\n",
        "        n_uniques.append(df[i].nunique())\n",
        "    \n",
        "    return pd.DataFrame({'Column': col, 'd_type': d_type, 'unique_sample': uniques, 'n_uniques': n_uniques})\n"
      ],
      "metadata": {
        "id": "D6hmDnL4_YVR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "report(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "nO-0zSxTAeSg",
        "outputId": "19325c98-4812-4669-f4eb-4a3ce1c5489b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         Column   d_type  \\\n",
              "0            months_as_customer    int64   \n",
              "1                           age    int64   \n",
              "2                 policy_number    int64   \n",
              "3              policy_bind_date   object   \n",
              "4                  policy_state   object   \n",
              "5                    policy_csl   object   \n",
              "6             policy_deductable    int64   \n",
              "7         policy_annual_premium  float64   \n",
              "8                umbrella_limit    int64   \n",
              "9                   insured_zip    int64   \n",
              "10                  insured_sex   object   \n",
              "11      insured_education_level   object   \n",
              "12           insured_occupation   object   \n",
              "13              insured_hobbies   object   \n",
              "14         insured_relationship   object   \n",
              "15                capital-gains    int64   \n",
              "16                 capital-loss    int64   \n",
              "17                incident_date   object   \n",
              "18                incident_type   object   \n",
              "19               collision_type   object   \n",
              "20            incident_severity   object   \n",
              "21        authorities_contacted   object   \n",
              "22               incident_state   object   \n",
              "23                incident_city   object   \n",
              "24            incident_location   object   \n",
              "25     incident_hour_of_the_day    int64   \n",
              "26  number_of_vehicles_involved    int64   \n",
              "27              property_damage   object   \n",
              "28              bodily_injuries    int64   \n",
              "29                    witnesses    int64   \n",
              "30      police_report_available   object   \n",
              "31           total_claim_amount    int64   \n",
              "32                 injury_claim    int64   \n",
              "33               property_claim    int64   \n",
              "34                vehicle_claim    int64   \n",
              "35                    auto_make   object   \n",
              "36                   auto_model   object   \n",
              "37                    auto_year    int64   \n",
              "38               fraud_reported   object   \n",
              "39                         _c39  float64   \n",
              "\n",
              "                                        unique_sample  n_uniques  \n",
              "0                           [328, 228, 134, 256, 137]        391  \n",
              "1                                [48, 42, 29, 41, 44]         46  \n",
              "2            [521585, 342868, 687698, 227811, 367455]       1000  \n",
              "3   [17-10-2014, 27-06-2006, 06-09-2000, 25-05-199...        951  \n",
              "4                                        [OH, IN, IL]          3  \n",
              "5                        [250/500, 100/300, 500/1000]          3  \n",
              "6                                   [1000, 2000, 500]          3  \n",
              "7       [1406.91, 1197.22, 1413.14, 1415.74, 1583.91]        991  \n",
              "8             [0, 5000000, 6000000, 4000000, 3000000]         11  \n",
              "9            [466132, 468176, 430632, 608117, 610706]        995  \n",
              "10                                     [MALE, FEMALE]          2  \n",
              "11         [MD, PhD, Associate, Masters, High School]          7  \n",
              "12  [craft-repair, machine-op-inspct, sales, armed...         14  \n",
              "13  [sleeping, reading, board-games, bungie-jumpin...         20  \n",
              "14  [husband, other-relative, own-child, unmarried...          6  \n",
              "15                    [53300, 0, 35100, 48900, 66000]        338  \n",
              "16                [0, -62400, -46000, -77000, -39300]        354  \n",
              "17  [25-01-2015, 21-01-2015, 22-02-2015, 10-01-201...         60  \n",
              "18  [Single Vehicle Collision, Vehicle Theft, Mult...          4  \n",
              "19  [Side Collision, ?, Rear Collision, Front Coll...          4  \n",
              "20  [Major Damage, Minor Damage, Total Loss, Trivi...          4  \n",
              "21             [Police, None, Fire, Other, Ambulance]          5  \n",
              "22                               [SC, VA, NY, OH, WV]          7  \n",
              "23  [Columbus, Riverwood, Arlington, Springfield, ...          7  \n",
              "24  [9935 4th Drive, 6608 MLK Hwy, 7121 Francis La...       1000  \n",
              "25                                  [5, 8, 7, 20, 19]         24  \n",
              "26                                       [1, 3, 4, 2]          4  \n",
              "27                                       [YES, ?, NO]          3  \n",
              "28                                          [1, 0, 2]          3  \n",
              "29                                       [2, 0, 3, 1]          4  \n",
              "30                                       [YES, ?, NO]          3  \n",
              "31                  [71610, 5070, 34650, 63400, 6500]        763  \n",
              "32                      [6510, 780, 7700, 6340, 1300]        638  \n",
              "33                      [13020, 780, 3850, 6340, 650]        626  \n",
              "34                  [52080, 3510, 23100, 50720, 4550]        726  \n",
              "35         [Saab, Mercedes, Dodge, Chevrolet, Accura]         14  \n",
              "36                       [92x, E400, RAM, Tahoe, RSX]         39  \n",
              "37                     [2004, 2007, 2014, 2009, 2003]         21  \n",
              "38                                             [Y, N]          2  \n",
              "39                                              [nan]          0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-850721de-568b-4223-9620-8d77c1fdc1d7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Column</th>\n",
              "      <th>d_type</th>\n",
              "      <th>unique_sample</th>\n",
              "      <th>n_uniques</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>months_as_customer</td>\n",
              "      <td>int64</td>\n",
              "      <td>[328, 228, 134, 256, 137]</td>\n",
              "      <td>391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>age</td>\n",
              "      <td>int64</td>\n",
              "      <td>[48, 42, 29, 41, 44]</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>policy_number</td>\n",
              "      <td>int64</td>\n",
              "      <td>[521585, 342868, 687698, 227811, 367455]</td>\n",
              "      <td>1000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>policy_bind_date</td>\n",
              "      <td>object</td>\n",
              "      <td>[17-10-2014, 27-06-2006, 06-09-2000, 25-05-199...</td>\n",
              "      <td>951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>policy_state</td>\n",
              "      <td>object</td>\n",
              "      <td>[OH, IN, IL]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>policy_csl</td>\n",
              "      <td>object</td>\n",
              "      <td>[250/500, 100/300, 500/1000]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>policy_deductable</td>\n",
              "      <td>int64</td>\n",
              "      <td>[1000, 2000, 500]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>policy_annual_premium</td>\n",
              "      <td>float64</td>\n",
              "      <td>[1406.91, 1197.22, 1413.14, 1415.74, 1583.91]</td>\n",
              "      <td>991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>umbrella_limit</td>\n",
              "      <td>int64</td>\n",
              "      <td>[0, 5000000, 6000000, 4000000, 3000000]</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>insured_zip</td>\n",
              "      <td>int64</td>\n",
              "      <td>[466132, 468176, 430632, 608117, 610706]</td>\n",
              "      <td>995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>insured_sex</td>\n",
              "      <td>object</td>\n",
              "      <td>[MALE, FEMALE]</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>insured_education_level</td>\n",
              "      <td>object</td>\n",
              "      <td>[MD, PhD, Associate, Masters, High School]</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>insured_occupation</td>\n",
              "      <td>object</td>\n",
              "      <td>[craft-repair, machine-op-inspct, sales, armed...</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>insured_hobbies</td>\n",
              "      <td>object</td>\n",
              "      <td>[sleeping, reading, board-games, bungie-jumpin...</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>insured_relationship</td>\n",
              "      <td>object</td>\n",
              "      <td>[husband, other-relative, own-child, unmarried...</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>capital-gains</td>\n",
              "      <td>int64</td>\n",
              "      <td>[53300, 0, 35100, 48900, 66000]</td>\n",
              "      <td>338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>capital-loss</td>\n",
              "      <td>int64</td>\n",
              "      <td>[0, -62400, -46000, -77000, -39300]</td>\n",
              "      <td>354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>incident_date</td>\n",
              "      <td>object</td>\n",
              "      <td>[25-01-2015, 21-01-2015, 22-02-2015, 10-01-201...</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>incident_type</td>\n",
              "      <td>object</td>\n",
              "      <td>[Single Vehicle Collision, Vehicle Theft, Mult...</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>collision_type</td>\n",
              "      <td>object</td>\n",
              "      <td>[Side Collision, ?, Rear Collision, Front Coll...</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>incident_severity</td>\n",
              "      <td>object</td>\n",
              "      <td>[Major Damage, Minor Damage, Total Loss, Trivi...</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>authorities_contacted</td>\n",
              "      <td>object</td>\n",
              "      <td>[Police, None, Fire, Other, Ambulance]</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>incident_state</td>\n",
              "      <td>object</td>\n",
              "      <td>[SC, VA, NY, OH, WV]</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>incident_city</td>\n",
              "      <td>object</td>\n",
              "      <td>[Columbus, Riverwood, Arlington, Springfield, ...</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>incident_location</td>\n",
              "      <td>object</td>\n",
              "      <td>[9935 4th Drive, 6608 MLK Hwy, 7121 Francis La...</td>\n",
              "      <td>1000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>incident_hour_of_the_day</td>\n",
              "      <td>int64</td>\n",
              "      <td>[5, 8, 7, 20, 19]</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>number_of_vehicles_involved</td>\n",
              "      <td>int64</td>\n",
              "      <td>[1, 3, 4, 2]</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>property_damage</td>\n",
              "      <td>object</td>\n",
              "      <td>[YES, ?, NO]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>bodily_injuries</td>\n",
              "      <td>int64</td>\n",
              "      <td>[1, 0, 2]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>witnesses</td>\n",
              "      <td>int64</td>\n",
              "      <td>[2, 0, 3, 1]</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>police_report_available</td>\n",
              "      <td>object</td>\n",
              "      <td>[YES, ?, NO]</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>total_claim_amount</td>\n",
              "      <td>int64</td>\n",
              "      <td>[71610, 5070, 34650, 63400, 6500]</td>\n",
              "      <td>763</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>injury_claim</td>\n",
              "      <td>int64</td>\n",
              "      <td>[6510, 780, 7700, 6340, 1300]</td>\n",
              "      <td>638</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>property_claim</td>\n",
              "      <td>int64</td>\n",
              "      <td>[13020, 780, 3850, 6340, 650]</td>\n",
              "      <td>626</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>vehicle_claim</td>\n",
              "      <td>int64</td>\n",
              "      <td>[52080, 3510, 23100, 50720, 4550]</td>\n",
              "      <td>726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>auto_make</td>\n",
              "      <td>object</td>\n",
              "      <td>[Saab, Mercedes, Dodge, Chevrolet, Accura]</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>auto_model</td>\n",
              "      <td>object</td>\n",
              "      <td>[92x, E400, RAM, Tahoe, RSX]</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>auto_year</td>\n",
              "      <td>int64</td>\n",
              "      <td>[2004, 2007, 2014, 2009, 2003]</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>fraud_reported</td>\n",
              "      <td>object</td>\n",
              "      <td>[Y, N]</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>_c39</td>\n",
              "      <td>float64</td>\n",
              "      <td>[nan]</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-850721de-568b-4223-9620-8d77c1fdc1d7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-850721de-568b-4223-9620-8d77c1fdc1d7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-850721de-568b-4223-9620-8d77c1fdc1d7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_LBthNTHAgt7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**THE ONLY COLUMN WITH THE MISSING VALUE WILL BE DELETED** "
      ],
      "metadata": {
        "id": "epnpodQ3BBYK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('_c39', axis=1)\n",
        "df = df.drop('policy_bind_date', axis=1)\n",
        "df = df.drop('incident_date', axis=1)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 339
        },
        "id": "qYEDRwAIBLhb",
        "outputId": "c5098b2e-4d73-4447-881e-d0ab03bd5055"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   months_as_customer  age  policy_number policy_state policy_csl  \\\n",
              "0                 328   48         521585           OH    250/500   \n",
              "1                 228   42         342868           IN    250/500   \n",
              "2                 134   29         687698           OH    100/300   \n",
              "3                 256   41         227811           IL    250/500   \n",
              "4                 228   44         367455           IL   500/1000   \n",
              "\n",
              "   policy_deductable  policy_annual_premium  umbrella_limit  insured_zip  \\\n",
              "0               1000                1406.91               0       466132   \n",
              "1               2000                1197.22         5000000       468176   \n",
              "2               2000                1413.14         5000000       430632   \n",
              "3               2000                1415.74         6000000       608117   \n",
              "4               1000                1583.91         6000000       610706   \n",
              "\n",
              "  insured_sex insured_education_level insured_occupation insured_hobbies  \\\n",
              "0        MALE                      MD       craft-repair        sleeping   \n",
              "1        MALE                      MD  machine-op-inspct         reading   \n",
              "2      FEMALE                     PhD              sales     board-games   \n",
              "3      FEMALE                     PhD       armed-forces     board-games   \n",
              "4        MALE               Associate              sales     board-games   \n",
              "\n",
              "  insured_relationship  capital-gains  capital-loss             incident_type  \\\n",
              "0              husband          53300             0  Single Vehicle Collision   \n",
              "1       other-relative              0             0             Vehicle Theft   \n",
              "2            own-child          35100             0   Multi-vehicle Collision   \n",
              "3            unmarried          48900        -62400  Single Vehicle Collision   \n",
              "4            unmarried          66000        -46000             Vehicle Theft   \n",
              "\n",
              "    collision_type incident_severity authorities_contacted incident_state  \\\n",
              "0   Side Collision      Major Damage                Police             SC   \n",
              "1                ?      Minor Damage                Police             VA   \n",
              "2   Rear Collision      Minor Damage                Police             NY   \n",
              "3  Front Collision      Major Damage                Police             OH   \n",
              "4                ?      Minor Damage                  None             NY   \n",
              "\n",
              "  incident_city  incident_location  incident_hour_of_the_day  \\\n",
              "0      Columbus     9935 4th Drive                         5   \n",
              "1     Riverwood       6608 MLK Hwy                         8   \n",
              "2      Columbus  7121 Francis Lane                         7   \n",
              "3     Arlington   6956 Maple Drive                         5   \n",
              "4     Arlington       3041 3rd Ave                        20   \n",
              "\n",
              "   number_of_vehicles_involved property_damage  bodily_injuries  witnesses  \\\n",
              "0                            1             YES                1          2   \n",
              "1                            1               ?                0          0   \n",
              "2                            3              NO                2          3   \n",
              "3                            1               ?                1          2   \n",
              "4                            1              NO                0          1   \n",
              "\n",
              "  police_report_available  total_claim_amount  injury_claim  property_claim  \\\n",
              "0                     YES               71610          6510           13020   \n",
              "1                       ?                5070           780             780   \n",
              "2                      NO               34650          7700            3850   \n",
              "3                      NO               63400          6340            6340   \n",
              "4                      NO                6500          1300             650   \n",
              "\n",
              "   vehicle_claim  auto_make auto_model  auto_year fraud_reported  \n",
              "0          52080       Saab        92x       2004              Y  \n",
              "1           3510   Mercedes       E400       2007              Y  \n",
              "2          23100      Dodge        RAM       2007              N  \n",
              "3          50720  Chevrolet      Tahoe       2014              Y  \n",
              "4           4550     Accura        RSX       2009              N  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fc244519-bfa5-4cf4-9c5c-b9e61ad60f30\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>months_as_customer</th>\n",
              "      <th>age</th>\n",
              "      <th>policy_number</th>\n",
              "      <th>policy_state</th>\n",
              "      <th>policy_csl</th>\n",
              "      <th>policy_deductable</th>\n",
              "      <th>policy_annual_premium</th>\n",
              "      <th>umbrella_limit</th>\n",
              "      <th>insured_zip</th>\n",
              "      <th>insured_sex</th>\n",
              "      <th>insured_education_level</th>\n",
              "      <th>insured_occupation</th>\n",
              "      <th>insured_hobbies</th>\n",
              "      <th>insured_relationship</th>\n",
              "      <th>capital-gains</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>incident_type</th>\n",
              "      <th>collision_type</th>\n",
              "      <th>incident_severity</th>\n",
              "      <th>authorities_contacted</th>\n",
              "      <th>incident_state</th>\n",
              "      <th>incident_city</th>\n",
              "      <th>incident_location</th>\n",
              "      <th>incident_hour_of_the_day</th>\n",
              "      <th>number_of_vehicles_involved</th>\n",
              "      <th>property_damage</th>\n",
              "      <th>bodily_injuries</th>\n",
              "      <th>witnesses</th>\n",
              "      <th>police_report_available</th>\n",
              "      <th>total_claim_amount</th>\n",
              "      <th>injury_claim</th>\n",
              "      <th>property_claim</th>\n",
              "      <th>vehicle_claim</th>\n",
              "      <th>auto_make</th>\n",
              "      <th>auto_model</th>\n",
              "      <th>auto_year</th>\n",
              "      <th>fraud_reported</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>328</td>\n",
              "      <td>48</td>\n",
              "      <td>521585</td>\n",
              "      <td>OH</td>\n",
              "      <td>250/500</td>\n",
              "      <td>1000</td>\n",
              "      <td>1406.91</td>\n",
              "      <td>0</td>\n",
              "      <td>466132</td>\n",
              "      <td>MALE</td>\n",
              "      <td>MD</td>\n",
              "      <td>craft-repair</td>\n",
              "      <td>sleeping</td>\n",
              "      <td>husband</td>\n",
              "      <td>53300</td>\n",
              "      <td>0</td>\n",
              "      <td>Single Vehicle Collision</td>\n",
              "      <td>Side Collision</td>\n",
              "      <td>Major Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>SC</td>\n",
              "      <td>Columbus</td>\n",
              "      <td>9935 4th Drive</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>YES</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>YES</td>\n",
              "      <td>71610</td>\n",
              "      <td>6510</td>\n",
              "      <td>13020</td>\n",
              "      <td>52080</td>\n",
              "      <td>Saab</td>\n",
              "      <td>92x</td>\n",
              "      <td>2004</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>228</td>\n",
              "      <td>42</td>\n",
              "      <td>342868</td>\n",
              "      <td>IN</td>\n",
              "      <td>250/500</td>\n",
              "      <td>2000</td>\n",
              "      <td>1197.22</td>\n",
              "      <td>5000000</td>\n",
              "      <td>468176</td>\n",
              "      <td>MALE</td>\n",
              "      <td>MD</td>\n",
              "      <td>machine-op-inspct</td>\n",
              "      <td>reading</td>\n",
              "      <td>other-relative</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Vehicle Theft</td>\n",
              "      <td>?</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>VA</td>\n",
              "      <td>Riverwood</td>\n",
              "      <td>6608 MLK Hwy</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>?</td>\n",
              "      <td>5070</td>\n",
              "      <td>780</td>\n",
              "      <td>780</td>\n",
              "      <td>3510</td>\n",
              "      <td>Mercedes</td>\n",
              "      <td>E400</td>\n",
              "      <td>2007</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>134</td>\n",
              "      <td>29</td>\n",
              "      <td>687698</td>\n",
              "      <td>OH</td>\n",
              "      <td>100/300</td>\n",
              "      <td>2000</td>\n",
              "      <td>1413.14</td>\n",
              "      <td>5000000</td>\n",
              "      <td>430632</td>\n",
              "      <td>FEMALE</td>\n",
              "      <td>PhD</td>\n",
              "      <td>sales</td>\n",
              "      <td>board-games</td>\n",
              "      <td>own-child</td>\n",
              "      <td>35100</td>\n",
              "      <td>0</td>\n",
              "      <td>Multi-vehicle Collision</td>\n",
              "      <td>Rear Collision</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>NY</td>\n",
              "      <td>Columbus</td>\n",
              "      <td>7121 Francis Lane</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>NO</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>NO</td>\n",
              "      <td>34650</td>\n",
              "      <td>7700</td>\n",
              "      <td>3850</td>\n",
              "      <td>23100</td>\n",
              "      <td>Dodge</td>\n",
              "      <td>RAM</td>\n",
              "      <td>2007</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>256</td>\n",
              "      <td>41</td>\n",
              "      <td>227811</td>\n",
              "      <td>IL</td>\n",
              "      <td>250/500</td>\n",
              "      <td>2000</td>\n",
              "      <td>1415.74</td>\n",
              "      <td>6000000</td>\n",
              "      <td>608117</td>\n",
              "      <td>FEMALE</td>\n",
              "      <td>PhD</td>\n",
              "      <td>armed-forces</td>\n",
              "      <td>board-games</td>\n",
              "      <td>unmarried</td>\n",
              "      <td>48900</td>\n",
              "      <td>-62400</td>\n",
              "      <td>Single Vehicle Collision</td>\n",
              "      <td>Front Collision</td>\n",
              "      <td>Major Damage</td>\n",
              "      <td>Police</td>\n",
              "      <td>OH</td>\n",
              "      <td>Arlington</td>\n",
              "      <td>6956 Maple Drive</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>NO</td>\n",
              "      <td>63400</td>\n",
              "      <td>6340</td>\n",
              "      <td>6340</td>\n",
              "      <td>50720</td>\n",
              "      <td>Chevrolet</td>\n",
              "      <td>Tahoe</td>\n",
              "      <td>2014</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>228</td>\n",
              "      <td>44</td>\n",
              "      <td>367455</td>\n",
              "      <td>IL</td>\n",
              "      <td>500/1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1583.91</td>\n",
              "      <td>6000000</td>\n",
              "      <td>610706</td>\n",
              "      <td>MALE</td>\n",
              "      <td>Associate</td>\n",
              "      <td>sales</td>\n",
              "      <td>board-games</td>\n",
              "      <td>unmarried</td>\n",
              "      <td>66000</td>\n",
              "      <td>-46000</td>\n",
              "      <td>Vehicle Theft</td>\n",
              "      <td>?</td>\n",
              "      <td>Minor Damage</td>\n",
              "      <td>None</td>\n",
              "      <td>NY</td>\n",
              "      <td>Arlington</td>\n",
              "      <td>3041 3rd Ave</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>NO</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NO</td>\n",
              "      <td>6500</td>\n",
              "      <td>1300</td>\n",
              "      <td>650</td>\n",
              "      <td>4550</td>\n",
              "      <td>Accura</td>\n",
              "      <td>RSX</td>\n",
              "      <td>2009</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc244519-bfa5-4cf4-9c5c-b9e61ad60f30')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fc244519-bfa5-4cf4-9c5c-b9e61ad60f30 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fc244519-bfa5-4cf4-9c5c-b9e61ad60f30');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**BI-VARIATE ANALYSIS**"
      ],
      "metadata": {
        "id": "3LixDvPAKbQg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "features = ['incident_state', 'police_report_available',\n",
        "       'incident_state', 'policy_deductable',\n",
        "       'insured_sex', 'insured_education_level',\n",
        "       'incident_type', 'collision_type', 'authorities_contacted']\n",
        "\n",
        "for f in features:\n",
        "    sns.countplot(x = f, data = df, palette = 'Set1', hue = 'fraud_reported')\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "LnaOIkfKuyXP",
        "outputId": "b7c28b9c-ba70-4275-b1fb-a9214aadd4d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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gRbXoEEDLVu2TDExMZo0aZIqV66suLg49erVy95m9OjROnfunAYMGKDU1FTdddddio+P5zd2AACApHyGnUtKlSqlBg0aFFQtV9WhQwd16NAh1/k2m02TJk3SpEmTCrUOAABQPOVrgDIAAEBxQdgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACWRtgBAACW5uHsAgAAQP5tq9+waDfY7umi3V4B4MgOAACwtGIVdl566SXZbDaNGDHCPu3ChQsaPHiwypQpo1KlSqlr1646fvy484oEAAAupdiEna1bt+qNN95Q7dq1HaY/9dRT+uyzz/Thhx9q/fr1Onr0qLp06eKkKgEAgKspFmHn7Nmz6tWrl958803dcsst9ulnzpzR22+/renTp6tly5aqV6+eFi5cqO+++06bNm1yYsUAAMBVFIuwM3jwYN1///2Kjo52mL59+3ZlZmY6TK9Ro4bCw8O1cePGXNeXnp6utLQ0hwcAALAml78a67333tOOHTu0devWK+alpKTI09NTpUuXdpgeFBSklJSUXNcZGxuriRMnFnSpAADABbn0kZ0jR45o+PDhWrp0qby9vQtsvTExMTpz5oz9ceTIkQJbNwAAcC0uHXa2b9+uEydOqG7duvLw8JCHh4fWr1+vmTNnysPDQ0FBQcrIyFBqaqrDcsePH1dwcHCu6/Xy8pK/v7/DAwAAWJNLn8Zq1aqVfvjhB4dpjz/+uGrUqKExY8YoLCxMJUqU0OrVq9W1a1dJUlJSkg4fPqwmTZo4o2QAAOBiXDrs+Pn56c4773SY5uvrqzJlytin9+vXTyNHjlRgYKD8/f01dOhQNWnSRI0bN3ZGyQAAwMW4dNjJixkzZsjNzU1du3ZVenq62rRpozlz5ji7LAAA4CKKXdhZt26dw3Nvb2/Nnj1bs2fPLrRtct8RAACKL5ceoAwAAHCzCDsAAMDSCDsAAMDSCDsAAMDSit0AZQCwqiK/GELiggj8LXBkBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBpXYwGFgKtqAMB1cGQHAABYGmEHAABYGqexcFO4IzwAwNVxZAcAAFgaYQcAAFgap7EAFCmuVEN+cMocN4MjOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNIIOwAAwNJcOuzExsaqQYMG8vPzU/ny5fXggw8qKSnJoc2FCxc0ePBglSlTRqVKlVLXrl11/PhxJ1UMAABcjUuHnfXr12vw4MHatGmTVq1apczMTN133306d+6cvc1TTz2lzz77TB9++KHWr1+vo0ePqkuXLk6sGgAAuBIPZxdwLfHx8Q7PFy1apPLly2v79u265557dObMGb399tt699131bJlS0nSwoULFRERoU2bNqlx48bOKBsAALgQlz6yc7kzZ85IkgIDAyVJ27dvV2ZmpqKjo+1tatSoofDwcG3cuNEpNQIAANfi0kd2/ionJ0cjRoxQs2bNdOedd0qSUlJS5OnpqdKlSzu0DQoKUkpKSq7rSk9PV3p6uv15WlpaodQMAACcr9gc2Rk8eLD27Nmj995776bXFRsbq4CAAPsjLCysACoEAACuqFiEnSFDhujzzz/X2rVrdeutt9qnBwcHKyMjQ6mpqQ7tjx8/ruDg4FzXFxMTozNnztgfR44cKazSAQCAk7l02DHGaMiQIVq2bJnWrFmjypUrO8yvV6+eSpQoodWrV9unJSUl6fDhw2rSpEmu6/Xy8pK/v7/DAwAAWJNLj9kZPHiw3n33XX366afy8/Ozj8MJCAiQj4+PAgIC1K9fP40cOVKBgYHy9/fX0KFD1aRJE67EAgAAklw87MydO1eS1Lx5c4fpCxcuVJ8+fSRJM2bMkJubm7p27ar09HS1adNGc+bMKeJKAQCAq3LpsGOMuW4bb29vzZ49W7Nnzy6CigAAQHHj0mN2AAAAbhZhBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWBphBwAAWJplws7s2bNVqVIleXt7q1GjRtqyZYuzSwIAAC7AEmHn/fff18iRIzV+/Hjt2LFDkZGRatOmjU6cOOHs0gAAgJNZIuxMnz5d/fv31+OPP66aNWtq3rx5KlmypBYsWODs0gAAgJMV+7CTkZGh7du3Kzo62j7Nzc1N0dHR2rhxoxMrAwAArsDD2QXcrN9++03Z2dkKCgpymB4UFKQff/zxqsukp6crPT3d/vzMmTOSpLS0tKu2P5udXUDV5k1W+vki3V5u+50X9M3VFXW/SPTNtdA3uaNvrq6o+0Wib64lt765NN0Yc+0VmGLu119/NZLMd9995zD9mWeeMQ0bNrzqMuPHjzeSePDgwYMHDx4WeBw5cuSaWaHYH9kpW7as3N3ddfz4cYfpx48fV3Bw8FWXiYmJ0ciRI+3Pc3JydOrUKZUpU0Y2m61Q672etLQ0hYWF6ciRI/L393dqLa6GvskdfZM7+iZ39M3V0S+5c7W+Mcbojz/+UGho6DXbFfuw4+npqXr16mn16tV68MEHJV0ML6tXr9aQIUOuuoyXl5e8vLwcppUuXbqQK70x/v7+LvFGckX0Te7om9zRN7mjb66OfsmdK/VNQEDAddsU+7AjSSNHjlTv3r1Vv359NWzYUHFxcTp37pwef/xxZ5cGAACczBJhp0ePHjp58qTGjRunlJQURUVFKT4+/opBywAA4O/HEmFHkoYMGZLraavixMvLS+PHj7/iNBvom2uhb3JH3+SOvrk6+iV3xbVvbMZc73otAACA4qvY/6ggAADAtRB2AACApRF24JIWLVrkcj8HUJxVqlRJcXFxzi4DucjP+71Pnz72n9soKocOHZLNZtPOnTsLdTtF9fmfMGGCoqKi7M+d0acoGoSdItSnTx/ZbDb985//vGLe4MGDZbPZ1KdPH4e2NptNJUqUUFBQkFq3bq0FCxYoJyeniCsvHH/dR09PT1WpUkWTJk1SVlZWnpafMGGCfXkPDw+VLVtW99xzj+Li4hxuB1LUNm7cKHd3d91///1Oq+FyW7du1YABA/Lcvqi+bG7kM3GzbDabli9fXiDryqvcvjzXrVsnm82m1NRUSRevKN2/f3+h15Odna2XXnpJNWrUkI+PjwIDA9WoUSO99dZbhb7twpCSkqKhQ4fqtttuk5eXl8LCwtSxY0etXr3a2aVZwl/fv8X9O4mwU8TCwsL03nvv6c8//7RPu3Dhgt59912Fh4c7tG3btq2OHTumQ4cOaeXKlWrRooWGDx+uDh065DkQuLpL+3jgwAE9/fTTmjBhgl555ZU8L3/HHXfo2LFjOnz4sNauXatu3bopNjZWTZs21R9//FGIlefu7bff1tChQ/XNN9/o6NGjTqnhcuXKlVPJkiWdXcZV3chnwhVkZmYW+Dp9fHxUvnz5Al/v5SZOnKgZM2bohRde0L59+7R27VoNGDDAHrqKk0OHDqlevXpas2aNXnnlFf3www+Kj49XixYtNHjwYGeXZ0nF+TuJsFPE6tatq7CwMH3yySf2aZ988onCw8NVp04dh7ZeXl4KDg5WhQoVVLduXf3rX//Sp59+qpUrV2rRokVFXHnhuLSPFStW1MCBAxUdHa0VK1bY53/55ZeKiIhQqVKl7B+0v/Lw8FBwcLBCQ0NVq1YtDR06VOvXr9eePXs0derUot4dnT17Vu+//74GDhyo+++/3+F1On36tHr16qVy5crJx8dHVatW1cKFCyVJGRkZGjJkiEJCQuTt7a2KFSsqNjbWvuzhw4fVqVMnlSpVSv7+/urevfsVt0j57LPP1KBBA3l7e6ts2bLq3Lmzfd7lp7GmT5+uWrVqydfXV2FhYRo0aJDOnj0r6eJRh8cff1xnzpyx/09uwoQJki7eRHfUqFGqUKGCfH191ahRI61bt+6m+iyvn4n4+HjdddddKl26tMqUKaMOHTro4MGD9vnX6sNKlSpJkjp37iybzWZ/Lkmffvqp6tatK29vb912222aOHGiwx9um82muXPn6oEHHpCvr6+mTJlyzdcyP652JG3y5MkqX768/Pz89MQTT+jZZ591OOVyyauvvqqQkBCVKVNGgwcPvmYYW7FihQYNGqRu3bqpcuXKioyMVL9+/TRq1Ch7m5ycHL388suqUqWKvLy8FB4erilTpjis5+eff1aLFi1UsmRJRUZGauPGjQ7zP/74Y91xxx3y8vJSpUqVNG3aNIf5p0+f1mOPPaZbbrlFJUuWVLt27XTgwIE89tZFgwYNks1m05YtW9S1a1dVq1ZNd9xxh0aOHKlNmzZJytvn5lpycnIUGxurypUry8fHR5GRkfroo48c2qxYsUJVq1aVt7e3WrRoocWLFzsctZOkDRs26O6775aPj4/CwsI0bNgwnTt37ob21xUU5+8kwo4T9O3b1+EP44IFC/L8a88tW7ZUZGSkwxeDlfj4+CgjI0OSdP78eb366qt655139M033+jw4cMOf5RzU6NGDbVr184pffTBBx+oRo0aql69uh555BEtWLDAfjfesWPHat++fVq5cqUSExM1d+5clS1bVpI0c+ZMrVixQh988IGSkpK0dOlS+xdyTk6OOnXqpFOnTmn9+vVatWqVfv75Z/Xo0cO+3f/+97/q3Lmz2rdvr++//16rV69Ww4YNc63Tzc1NM2fO1N69e7V48WKtWbNGo0ePliQ1bdpUcXFx8vf317Fjx3Ts2DF7vw8ZMkQbN27Ue++9p927d6tbt25q27btDX9RXS4vn4lz585p5MiR2rZtm1avXi03Nzd17tzZfgj9Wn24detWSdLChQt17Ngx+/Nvv/1Wjz32mIYPH659+/bpjTfe0KJFi674cp8wYYI6d+6sH374QX379r3ma1kQli5dqilTpmjq1Knavn27wsPDNXfu3CvarV27VgcPHtTatWu1ePFiLVq06JpfOsHBwVqzZo1OnjyZa5uYmBi99NJL9n189913r/iB1ueee06jRo3Szp07Va1aNfXs2dMeELdv367u3bvr4Ycf1g8//KAJEyZo7NixDnX16dNH27Zt04oVK7Rx40YZY9S+ffs8HzU7deqU4uPjNXjwYPn6+l4xv3Tp0nn63FxPbGyslixZonnz5mnv3r166qmn9Mgjj2j9+vWSpOTkZD300EN68MEHtWvXLj355JN67rnnHNZx8OBBtW3bVl27dtXu3bv1/vvva8OGDZb4XTipGH0nFcSdx5E3vXv3Np06dTIn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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot a pie chart\n",
        "fig = plt.figure(figsize=(7, 3))\n",
        "ax = fig.add_subplot(111)\n",
        "df.groupby('insured_sex').fraud_reported.count().plot.pie(autopct='%1.1f%%', ax=ax)\n",
        "\n",
        "# Title of the plot\n",
        "ax.set_title('Fraud reported with respect to the gender of the policy holders')\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 290
        },
        "id": "ym_qwyN5BrJU",
        "outputId": "073920e3-d111-479f-c5b7-e089b23f714a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Cross-tabulation between 'fraud_reported' and 'policy_state'\n",
        "cross_tab = pd.crosstab(df['fraud_reported'], df['policy_state'])\n",
        "print(cross_tab)\n",
        "cross_tab.plot(kind='bar', stacked=True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 515
        },
        "id": "x9-OynN3BzZg",
        "outputId": "afda2994-a1c8-4d2e-88bd-6da058d71313"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "policy_state     IL   IN   OH\n",
            "fraud_reported               \n",
            "N               261  231  261\n",
            "Y                77   79   91\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Calculate the mean total_claim_amount for each category of 'fraud_reported'\n",
        "grouped_data = df.groupby('fraud_reported')['total_claim_amount'].mean()\n",
        "\n",
        "# Plotting the grouped data as a bar plot\n",
        "grouped_data.plot(kind='bar')\n",
        "\n",
        "# Adding labels and title to the plot\n",
        "plt.xlabel('Fraud Reported')\n",
        "plt.ylabel('Mean Total Claim Amount')\n",
        "plt.title('Correlation: Fraud Reported vs. Total Claim Amount')\n",
        "\n",
        "# Display the plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "we85oM-QBtzB",
        "outputId": "c3fc2906-ed90-433a-deb0-28f55efc26ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#T-TEST FOR MONTHS AS A CUSTOMER WRT FRAUD_REPORTED\n",
        "from scipy.stats import ttest_ind, f_oneway\n",
        "\n",
        "# T-test comparing 'months_as_customer' for fraud reported and non-fraud reported cases\n",
        "fraud_group = df[df['fraud_reported'] == 'Y']['months_as_customer']\n",
        "non_fraud_group = df[df['fraud_reported'] == 'N']['months_as_customer']\n",
        "t_statistic, p_value = ttest_ind(fraud_group, non_fraud_group)\n",
        "print(\"T-test statistic:\", t_statistic)\n",
        "print(\"P-value:\", p_value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d8MmowfMKj6A",
        "outputId": "7c6ff5a4-97c1-4bf8-ac76-9322d35ccf15"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "T-test statistic: 0.6491299307140105\n",
            "P-value: 0.5164037490553421\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1]T-test statistic has a value of 0.6491299307140105, indicating a relatively small difference between the two groups.\n",
        "\n",
        "\n",
        "2] P-value is greater than the significance level,It implies that the observed difference in the mean 'months_as_customer' between the fraud reported and non-fraud reported groups is likely due to random variability or chance, rather than a true difference.\n"
      ],
      "metadata": {
        "id": "RcoZ8aCsN-Ff"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PRINCIPLE COMPONENT ANALYSIS WITH RESPECT TO FRAUD REPORTED**"
      ],
      "metadata": {
        "id": "-lhgJtWYQEik"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "# Select the columns\n",
        "selected_columns = ['months_as_customer', 'age', 'policy_number', 'policy_state', 'policy_csl',\n",
        "                    'policy_deductable', 'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',\n",
        "                    'insured_education_level', 'insured_occupation', 'insured_hobbies', 'insured_relationship',\n",
        "                    'capital-gains', 'capital-loss', 'incident_type', 'collision_type',\n",
        "                    'incident_severity', 'authorities_contacted', 'incident_state', 'incident_city',\n",
        "                    'incident_location', 'incident_hour_of_the_day', 'number_of_vehicles_involved',\n",
        "                    'property_damage', 'bodily_injuries', 'witnesses', 'police_report_available',\n",
        "                    'total_claim_amount', 'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',\n",
        "                    'auto_model', 'auto_year', 'fraud_reported']\n",
        "\n",
        "# Create a new DataFrame with the selected columns\n",
        "df_selected = df[selected_columns].copy()\n",
        "\n",
        "# Handle categorical columns with LabelEncoder\n",
        "categorical_columns = ['policy_state', 'policy_csl', 'insured_sex', 'insured_education_level',\n",
        "                       'insured_occupation', 'insured_hobbies', 'insured_relationship',\n",
        "                       'incident_type', 'collision_type', 'incident_severity',\n",
        "                       'authorities_contacted', 'incident_state', 'incident_city',\n",
        "                       'incident_location', 'property_damage', 'police_report_available',\n",
        "                       'auto_make', 'auto_model', 'fraud_reported']\n",
        "\n",
        "for column in categorical_columns:\n",
        "    label_encoder = LabelEncoder()\n",
        "    df_selected[column] = label_encoder.fit_transform(df_selected[column])\n",
        "\n",
        "# Convert remaining columns to float\n",
        "df_selected = df_selected.astype(float)\n",
        "\n",
        "# Create a separate DataFrame for the features and the target variable\n",
        "X = df_selected.iloc[:, :-1]  # Features\n",
        "y = df_selected['fraud_reported']  # Target variable\n",
        "\n",
        "# Apply PCA to the features\n",
        "pca = PCA(n_components=2)  # Specify the number of components to retain\n",
        "X_pca = pca.fit_transform(X)\n",
        "\n",
        "# Create a new DataFrame with the PCA results\n",
        "df_pca = pd.DataFrame(data=X_pca, columns=['PC1', 'PC2'])\n",
        "df_pca['fraud_reported'] = y\n",
        "\n",
        "# Print the resulting DataFrame\n",
        "print(df_pca.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_YZf4oRRS2xu",
        "outputId": "f8cb3c22-5973-4c65-f47a-4056bb7ab032"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            PC1            PC2  fraud_reported\n",
            "0 -1.101083e+06  -23646.789381             1.0\n",
            "1  3.898809e+06 -207311.768230             1.0\n",
            "2  3.899096e+06  137391.643846             0.0\n",
            "3  4.898725e+06 -323180.946551             1.0\n",
            "4  4.898896e+06 -183347.746886             0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The scientific notation in the PC1 and PC2 columns provides a concise representation of the large or small values present in the principal components, allowing for easier interpretation and comparison of the results."
      ],
      "metadata": {
        "id": "EFzRO7Mzanno"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "5B8A2S1kQPhM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**LOGISTIC REGRESSION MODEL**"
      ],
      "metadata": {
        "id": "VZ07NsS5bnZn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#PREDICTING PROBABILITIES\n",
        "# Import the required libraries\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Create and fit the logistic regression model\n",
        "logreg = LogisticRegression()\n",
        "logreg.fit(X_pca, y)\n",
        "\n",
        "# Predict probabilities for the first 5 instances\n",
        "predicted_probabilities = logreg.predict_proba(X_pca)[:5]\n",
        "print(predicted_probabilities)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "twpfX6wHbr8z",
        "outputId": "877e62b5-ca32-4c0b-ee3a-ee8f21755683"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[0.51098072 0.48901928]\n",
            " [0.44661446 0.55338554]\n",
            " [0.4638828  0.5361172 ]\n",
            " [0.42996239 0.57003761]\n",
            " [0.43689891 0.56310109]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "PREDICTING THE PROBABILITY OF YES AND NO OF THE FRAUD REPORTED COLUMN WITH RESPECT TO PCA."
      ],
      "metadata": {
        "id": "hoDHJh1pdS7u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Predict classes for the first 5 instances\n",
        "predicted_classes = logreg.predict(X_pca)[:5]\n",
        "print(predicted_classes)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5zPkah6lbzXC",
        "outputId": "0c1e8d34-14b7-4302-d4a7-4d378b1a656c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0. 1. 1. 1. 1.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Based on the model's predictions, the first instance is predicted to have no fraud reported, while the remaining four instances are predicted to have fraud reported.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "ACMHZsLGfXry"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Get the coefficients of the logistic regression model\n",
        "coefficients = logreg.coef_\n",
        "print(coefficients)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7UdE-39Vf6gU",
        "outputId": "f16151a9-7c20-4729-daa3-baa601961e6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 4.42364884e-08 -2.02060786e-07]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " The first coefficient 4.42364884e-08 represents the weight assigned to \n",
        "PC1, and the second coefficient -2.02060786e-07 represents the weight assigned to PC2.\n",
        "\n",
        "However, since the coefficients are very close to zero, it suggests that the principal components (PC1 and PC2) may not have a significant impact on the prediction of fraud reported in this particular model."
      ],
      "metadata": {
        "id": "m6-cCF41ghTo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate odds ratios for the first feature (PC1)\n",
        "odds_ratios = np.exp(coefficients[:, 0])\n",
        "print(odds_ratios)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qJiM6C6mgM10",
        "outputId": "624d639c-9bdc-48b8-82ac-9af3e8ae5c34"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1.00000004]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Since the odds ratio is close to 1, it suggests that PC1 has little impact on the likelihood of fraud reported in the logistic regression model."
      ],
      "metadata": {
        "id": "6h7zxn_OhNP1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "\n",
        "# Make predictions using the logistic regression model\n",
        "predictions = logreg.predict(X_pca)\n",
        "\n",
        "# Calculate evaluation metrics\n",
        "accuracy = accuracy_score(y, predictions)\n",
        "precision = precision_score(y, predictions)\n",
        "recall = recall_score(y, predictions)\n",
        "f1 = f1_score(y, predictions)\n",
        "\n",
        "# Create a bar plot for the evaluation metrics\n",
        "metrics = ['Accuracy', 'Precision', 'Recall', 'F1-score']\n",
        "values = [accuracy, precision, recall, f1]\n",
        "\n",
        "plt.bar(metrics, values)\n",
        "plt.xlabel('Metrics')\n",
        "plt.ylabel('Values')\n",
        "plt.title('Evaluation Metrics')\n",
        "plt.show()\n",
        " \n",
        "#Print values.\n",
        "print(\"Accuracy:\", accuracy)\n",
        "print(\"Precision:\", precision)\n",
        "print(\"Recall:\", recall)\n",
        "print(\"F1-score:\", f1)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "kH9Ktbpsg7Lf",
        "outputId": "178ac100-4b8f-4c63-c1f1-b74e43f59ca6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.577\n",
            "Precision: 0.2696335078534031\n",
            "Recall: 0.41700404858299595\n",
            "F1-score: 0.32750397456279806\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Accuracy: 57.7%\n",
        "Precision: 26.96%\n",
        "Recall: 41.7%\n",
        "F1-score: 32.75%"
      ],
      "metadata": {
        "id": "xI7lp7iJiXcP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Calculate the importance values\n",
        "importance_values = absolute_coefficients[0][top_5_indices]\n",
        "\n",
        "# Create the bar plot\n",
        "plt.bar(range(len(important_columns)), importance_values)\n",
        "plt.xticks(range(len(important_columns)), important_columns, rotation='vertical')\n",
        "plt.xlabel('Features')\n",
        "plt.ylabel('Importance')\n",
        "plt.title('Top 5 Important Features for Predicting Fraud Reported \"Yes\"')\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "g-DayjijiYCw",
        "outputId": "25cc10ef-f9f3-44d3-82bd-f1b4f4a0ea1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LeO-RVlkih2O"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**RANDOM FOREST**"
      ],
      "metadata": {
        "id": "SwQ-Z6pXj7U4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Split the PCA-transformed data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X_pca, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Create a Random Forest classifier\n",
        "rf = RandomForestClassifier()\n",
        "\n",
        "# Fit the model on the training data\n",
        "rf.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the test set\n",
        "y_pred = rf.predict(X_test)\n",
        "\n",
        "# Calculate the following\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "precision = precision_score(y, predictions)\n",
        "recall = recall_score(y, predictions)\n",
        "f1 = f1_score(y, predictions)\n",
        "\n",
        "# Create a bar plot for the evaluation metrics\n",
        "metrics = ['Accuracy', 'Precision', 'Recall', 'F1-score']\n",
        "values = [accuracy, precision, recall, f1]\n",
        "\n",
        "plt.bar(metrics, values)\n",
        "plt.xlabel('Metrics')\n",
        "plt.ylabel('Values')\n",
        "plt.title('Evaluation Metrics')\n",
        "plt.show()\n",
        " \n",
        "#Print values.\n",
        "print(\"Accuracy:\", accuracy)\n",
        "print(\"Precision:\", precision)\n",
        "print(\"Recall:\", recall)\n",
        "print(\"F1-score:\", f1)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "1FQJ-6aDkADV",
        "outputId": "0edd697e-be9f-4b56-bca6-117c1383bfd2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.72\n",
            "Precision: 0.2696335078534031\n",
            "Recall: 0.41700404858299595\n",
            "F1-score: 0.32750397456279806\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.tree import export_text\n",
        "\n",
        "# Create a Random Forest classifier\n",
        "rf = RandomForestClassifier(n_estimators=100)\n",
        "\n",
        "# Fit the Random Forest model to the data\n",
        "rf.fit(X, y)\n",
        "\n",
        "# Extract the first decision tree from the Random Forest\n",
        "decision_tree = rf.estimators_[0]\n",
        "\n",
        "# Convert the decision tree to a text representation\n",
        "tree_text = export_text(decision_tree, feature_names=list(X.columns))\n",
        "\n",
        "# Print the tree structure\n",
        "print(tree_text)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G6K-f1d9kKKZ",
        "outputId": "ecbe0634-8dc0-4007-85b2-7bbd666d2a66"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "|--- incident_severity <= 0.50\n",
            "|   |--- capital-loss <= -83500.00\n",
            "|   |   |--- class: 0.0\n",
            "|   |--- capital-loss >  -83500.00\n",
            "|   |   |--- insured_zip <= 443907.50\n",
            "|   |   |   |--- policy_csl <= 1.50\n",
            "|   |   |   |   |--- injury_claim <= 16390.00\n",
            "|   |   |   |   |   |--- insured_occupation <= 7.50\n",
            "|   |   |   |   |   |   |--- policy_state <= 1.50\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |--- policy_state >  1.50\n",
            "|   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |--- insured_occupation >  7.50\n",
            "|   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |--- injury_claim >  16390.00\n",
            "|   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |--- policy_csl >  1.50\n",
            "|   |   |   |   |--- total_claim_amount <= 37145.00\n",
            "|   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |--- total_claim_amount >  37145.00\n",
            "|   |   |   |   |   |--- auto_model <= 9.50\n",
            "|   |   |   |   |   |   |--- policy_number <= 471507.00\n",
            "|   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- policy_number >  471507.00\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |--- auto_model >  9.50\n",
            "|   |   |   |   |   |   |--- umbrella_limit <= 1000000.00\n",
            "|   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- umbrella_limit >  1000000.00\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |--- insured_zip >  443907.50\n",
            "|   |   |   |--- incident_location <= 11.00\n",
            "|   |   |   |   |--- class: 0.0\n",
            "|   |   |   |--- incident_location >  11.00\n",
            "|   |   |   |   |--- insured_zip <= 614107.50\n",
            "|   |   |   |   |   |--- incident_location <= 112.50\n",
            "|   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |--- incident_location >  112.50\n",
            "|   |   |   |   |   |   |--- property_claim <= 8860.00\n",
            "|   |   |   |   |   |   |   |--- property_claim <= 4760.00\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |--- property_claim >  4760.00\n",
            "|   |   |   |   |   |   |   |   |--- property_claim <= 4990.00\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- property_claim >  4990.00\n",
            "|   |   |   |   |   |   |   |   |   |--- capital-loss <= -27450.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_annual_premium <= 1101.14\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_annual_premium >  1101.14\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
            "|   |   |   |   |   |   |   |   |   |--- capital-loss >  -27450.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- auto_make <= 2.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- auto_make >  2.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
            "|   |   |   |   |   |   |--- property_claim >  8860.00\n",
            "|   |   |   |   |   |   |   |--- insured_hobbies <= 14.50\n",
            "|   |   |   |   |   |   |   |   |--- policy_number <= 495011.00\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_zip <= 603245.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_number <= 345432.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_number >  345432.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_zip >  603245.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- policy_number >  495011.00\n",
            "|   |   |   |   |   |   |   |   |   |--- policy_deductable <= 750.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_state <= 2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_state >  2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |--- policy_deductable >  750.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_city <= 4.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_city >  4.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |--- insured_hobbies >  14.50\n",
            "|   |   |   |   |   |   |   |   |--- policy_annual_premium <= 1514.86\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- policy_annual_premium >  1514.86\n",
            "|   |   |   |   |   |   |   |   |   |--- total_claim_amount <= 76835.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |   |--- total_claim_amount >  76835.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |--- insured_zip >  614107.50\n",
            "|   |   |   |   |   |--- insured_hobbies <= 6.00\n",
            "|   |   |   |   |   |   |--- policy_annual_premium <= 1460.62\n",
            "|   |   |   |   |   |   |   |--- incident_location <= 477.50\n",
            "|   |   |   |   |   |   |   |   |--- incident_location <= 264.50\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- incident_location >  264.50\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |--- incident_location >  477.50\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- policy_annual_premium >  1460.62\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |--- insured_hobbies >  6.00\n",
            "|   |   |   |   |   |   |--- auto_model <= 2.50\n",
            "|   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- auto_model >  2.50\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|--- incident_severity >  0.50\n",
            "|   |--- policy_number <= 997521.00\n",
            "|   |   |--- auto_year <= 1995.50\n",
            "|   |   |   |--- auto_model <= 1.50\n",
            "|   |   |   |   |--- class: 1.0\n",
            "|   |   |   |--- auto_model >  1.50\n",
            "|   |   |   |   |--- insured_occupation <= 0.50\n",
            "|   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |--- insured_occupation >  0.50\n",
            "|   |   |   |   |   |--- incident_location <= 79.50\n",
            "|   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |--- incident_location >  79.50\n",
            "|   |   |   |   |   |   |--- incident_hour_of_the_day <= 13.50\n",
            "|   |   |   |   |   |   |   |--- policy_annual_premium <= 1362.71\n",
            "|   |   |   |   |   |   |   |   |--- capital-loss <= -23950.00\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- capital-loss >  -23950.00\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |--- policy_annual_premium >  1362.71\n",
            "|   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |--- incident_hour_of_the_day >  13.50\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |--- auto_year >  1995.50\n",
            "|   |   |   |--- incident_location <= 856.50\n",
            "|   |   |   |   |--- bodily_injuries <= 1.50\n",
            "|   |   |   |   |   |--- incident_city <= 1.50\n",
            "|   |   |   |   |   |   |--- policy_annual_premium <= 1106.93\n",
            "|   |   |   |   |   |   |   |--- incident_location <= 188.00\n",
            "|   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |--- incident_location >  188.00\n",
            "|   |   |   |   |   |   |   |   |--- insured_occupation <= 2.50\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- insured_occupation >  2.50\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_hobbies <= 3.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_hobbies >  3.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_deductable <= 750.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_deductable >  750.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- policy_annual_premium >  1106.93\n",
            "|   |   |   |   |   |   |   |--- property_claim <= 13270.00\n",
            "|   |   |   |   |   |   |   |   |--- age <= 29.50\n",
            "|   |   |   |   |   |   |   |   |   |--- capital-gains <= 43400.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_state <= 1.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- policy_state >  1.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |   |--- capital-gains >  43400.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- age >  29.50\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_hobbies <= 0.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- vehicle_claim <= 4220.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- vehicle_claim >  4220.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |--- insured_hobbies >  0.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- property_claim <= 280.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |   |--- property_claim >  280.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
            "|   |   |   |   |   |   |   |--- property_claim >  13270.00\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |--- incident_city >  1.50\n",
            "|   |   |   |   |   |   |--- insured_hobbies <= 6.50\n",
            "|   |   |   |   |   |   |   |--- age <= 55.50\n",
            "|   |   |   |   |   |   |   |   |--- insured_occupation <= 9.50\n",
            "|   |   |   |   |   |   |   |   |   |--- months_as_customer <= 379.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- insured_zip <= 475039.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
            "|   |   |   |   |   |   |   |   |   |   |--- insured_zip >  475039.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
            "|   |   |   |   |   |   |   |   |   |--- months_as_customer >  379.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- insured_occupation >  9.50\n",
            "|   |   |   |   |   |   |   |   |   |--- umbrella_limit <= 1500000.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- insured_relationship <= 3.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- insured_relationship >  3.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |--- umbrella_limit >  1500000.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- capital-loss <= -37300.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- capital-loss >  -37300.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |--- age >  55.50\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- insured_hobbies >  6.50\n",
            "|   |   |   |   |   |   |   |--- umbrella_limit <= 9500000.00\n",
            "|   |   |   |   |   |   |   |   |--- insured_zip <= 619505.00\n",
            "|   |   |   |   |   |   |   |   |   |--- witnesses <= 2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_type <= 2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
            "|   |   |   |   |   |   |   |   |   |   |--- incident_type >  2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
            "|   |   |   |   |   |   |   |   |   |--- witnesses >  2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- age <= 58.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |   |--- age >  58.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |--- insured_zip >  619505.00\n",
            "|   |   |   |   |   |   |   |   |   |--- property_claim <= 5050.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |--- property_claim >  5050.00\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |--- umbrella_limit >  9500000.00\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |--- bodily_injuries >  1.50\n",
            "|   |   |   |   |   |--- incident_location <= 813.00\n",
            "|   |   |   |   |   |   |--- property_claim <= 760.00\n",
            "|   |   |   |   |   |   |   |--- auto_make <= 12.50\n",
            "|   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |--- auto_make >  12.50\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |--- property_claim >  760.00\n",
            "|   |   |   |   |   |   |   |--- incident_hour_of_the_day <= 22.50\n",
            "|   |   |   |   |   |   |   |   |--- incident_location <= 38.00\n",
            "|   |   |   |   |   |   |   |   |   |--- policy_number <= 380751.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |   |   |--- policy_number >  380751.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- incident_location >  38.00\n",
            "|   |   |   |   |   |   |   |   |   |--- incident_severity <= 2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- injury_claim <= 15865.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
            "|   |   |   |   |   |   |   |   |   |   |--- injury_claim >  15865.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
            "|   |   |   |   |   |   |   |   |   |--- incident_severity >  2.50\n",
            "|   |   |   |   |   |   |   |   |   |   |--- umbrella_limit <= 5500000.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |   |   |--- umbrella_limit >  5500000.00\n",
            "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |--- incident_hour_of_the_day >  22.50\n",
            "|   |   |   |   |   |   |   |   |--- age <= 42.50\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- age >  42.50\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |--- incident_location >  813.00\n",
            "|   |   |   |   |   |   |--- injury_claim <= 7375.00\n",
            "|   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |--- injury_claim >  7375.00\n",
            "|   |   |   |   |   |   |   |--- property_damage <= 1.50\n",
            "|   |   |   |   |   |   |   |   |--- incident_location <= 854.00\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |   |   |   |--- incident_location >  854.00\n",
            "|   |   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |   |   |   |   |--- property_damage >  1.50\n",
            "|   |   |   |   |   |   |   |   |--- class: 1.0\n",
            "|   |   |   |--- incident_location >  856.50\n",
            "|   |   |   |   |--- incident_city <= 5.50\n",
            "|   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |--- incident_city >  5.50\n",
            "|   |   |   |   |   |--- months_as_customer <= 244.00\n",
            "|   |   |   |   |   |   |--- class: 0.0\n",
            "|   |   |   |   |   |--- months_as_customer >  244.00\n",
            "|   |   |   |   |   |   |--- class: 1.0\n",
            "|   |--- policy_number >  997521.00\n",
            "|   |   |--- class: 1.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "j4ox0lMnlLN5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Each node in the decision tree represents a decision based on a specific feature and its corresponding value. The tree starts with the root node, which evaluates the condition \"incident_severity <= 0.50\". If this condition is true, it follows the left branch; otherwise, it follows the right branch.\n",
        "\n",
        "At each subsequent node, a new condition is evaluated based on a different feature and its value. The tree branches out based on the outcomes of these conditions until it reaches the leaf nodes, which provide the final classification (0.0 or 1.0) for the given input."
      ],
      "metadata": {
        "id": "c8Kr1HIklyiM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create a Random Forest classifier\n",
        "rf = RandomForestClassifier()\n",
        "\n",
        "# Fit the model on the PCA-transformed data\n",
        "rf.fit(X_pca, y)\n",
        "\n",
        "# Get feature importances\n",
        "importances = rf.feature_importances_\n",
        "print(importances)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uJOs6qrol2bs",
        "outputId": "d9135d90-a559-4196-9ff5-d8c0aecaec26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.49433815 0.50566185]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "w8LpMGQvmEAw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "KLPYXwEjmbAz"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ApNRtq7VmdYy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a separate DataFrame for the features and the target variable\n",
        "X = df_selected.iloc[:, :-1]  # Features\n",
        "y = df_selected['fraud_reported']  # Target variable\n",
        "\n",
        "# Training the Random Forest model\n",
        "model = RandomForestClassifier()\n",
        "model.fit(X, y)\n",
        "\n",
        "# Making predictions using the trained model\n",
        "y_pred = model.predict(X)\n",
        "\n",
        "# Creating the confusion matrix\n",
        "cm = confusion_matrix(y, y_pred)\n",
        "print(cm)\n",
        "\n",
        "\n",
        "# Calculate true positive, true negative, false positive, and false negative\n",
        "tn, fp, fn, tp = cm.ravel()\n",
        "print(\"True Positive:\", tp)\n",
        "print(\"True Negative:\", tn)\n",
        "print(\"False Positive:\", fp)\n",
        "print(\"False Negative:\", fn)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wUl45Wy4miLw",
        "outputId": "fe2f807f-0d6d-4689-a461-6662ba887fb4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[753   0]\n",
            " [  0 247]]\n",
            "True Positive: 247\n",
            "True Negative: 753\n",
            "False Positive: 0\n",
            "False Negative: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Get feature importances\n",
        "importances = model.feature_importances_\n",
        "\n",
        "# Create a DataFrame for visualization\n",
        "df_importances = pd.DataFrame({'Feature': selected_columns[:-1], 'Importance': importances})\n",
        "\n",
        "# Sort the DataFrame by importance values\n",
        "df_importances = df_importances.sort_values(by='Importance', ascending=False)\n",
        "\n",
        "# Plotting the feature importances\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.bar(df_importances['Feature'], df_importances['Importance'])\n",
        "plt.xticks(rotation=90)\n",
        "plt.xlabel('Features')\n",
        "plt.ylabel('Importance')\n",
        "plt.title('Feature Importances in Predicting Fraud Reported')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "id": "VpGnU8Z_pGNB",
        "outputId": "43f10c0d-e7c6-44a1-b72c-657e754d837b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "lrm3YQcep3FV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ANN MODEL**"
      ],
      "metadata": {
        "id": "6lsJRSvMqgov"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a separate DataFrame for the features and the target variable\n",
        "X = df_selected.iloc[:, :-1]  # Features\n",
        "y = df_selected['fraud_reported']  # Target variable\n",
        "\n",
        "# Apply PCA to the features\n",
        "pca = PCA(n_components=2)  # Specify the number of components to retain\n",
        "X_pca = pca.fit_transform(X)\n",
        "\n",
        "# Create a new DataFrame with the PCA results\n",
        "df_pca = pd.DataFrame(data=X_pca, columns=['PC1', 'PC2'])\n",
        "df_pca['fraud_reported'] = y\n",
        "\n",
        "# Split the data into train and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(df_pca.iloc[:, :-1], df_pca['fraud_reported'], test_size=0.2, random_state=42)\n",
        "\n",
        "# Create the ANN model\n",
        "model = Sequential()\n",
        "model.add(Dense(32, input_dim=2, activation='relu'))\n",
        "model.add(Dense(16, activation='relu'))\n",
        "model.add(Dense(1, activation='sigmoid'))\n",
        "\n",
        "# Compile the model\n",
        "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n",
        "\n",
        "# Train the model\n",
        "model.fit(X_train, y_train, epochs=10, batch_size=32)\n",
        "\n",
        "# Evaluate the model\n",
        "accuracy = model.evaluate(X_test, y_test)\n",
        "print('Test Accuracy:', accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0RjDChfOqjQB",
        "outputId": "aa35a891-ddfb-4dc0-892b-0fef53bf7eb9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "25/25 [==============================] - 2s 3ms/step - loss: 30590.1348 - accuracy: 0.6363\n",
            "Epoch 2/10\n",
            "25/25 [==============================] - 0s 3ms/step - loss: 5690.7656 - accuracy: 0.6625\n",
            "Epoch 3/10\n",
            "25/25 [==============================] - 0s 3ms/step - loss: 2579.8572 - accuracy: 0.6488\n",
            "Epoch 4/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 977.5701 - accuracy: 0.6363\n",
            "Epoch 5/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 901.0073 - accuracy: 0.6325\n",
            "Epoch 6/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 1847.0763 - accuracy: 0.6562\n",
            "Epoch 7/10\n",
            "25/25 [==============================] - 0s 3ms/step - loss: 1927.5375 - accuracy: 0.6275\n",
            "Epoch 8/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 1375.0023 - accuracy: 0.6463\n",
            "Epoch 9/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 1282.7043 - accuracy: 0.6162\n",
            "Epoch 10/10\n",
            "25/25 [==============================] - 0s 2ms/step - loss: 723.0424 - accuracy: 0.6288\n",
            "7/7 [==============================] - 0s 2ms/step - loss: 1037.0581 - accuracy: 0.7200\n",
            "Test Accuracy: [1037.05810546875, 0.7200000286102295]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "0.7200000286102295: This value represents the test accuracy specifically for the \"fraud_reported\" variable. It indicates that the trained ANN model correctly predicted the \"fraud_reported\" outcome for approximately 72% of the instances in the test set."
      ],
      "metadata": {
        "id": "COrMstlgs1yM"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "1w4xlAldqndv"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
